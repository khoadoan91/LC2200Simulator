main:		lw	$sp, 	stack
			lw	$sp, 	0($sp)
			lw 	$at, 	factorial
			addi	$a0, 	$zero, 5
			jalr	$at, 	$ra
			halt
factorial: 	sw	$a0, 	0($sp)
			addi	$sp, 	$sp, 	-4
			sw	$fp, 	1($sp)
			addi	$fp, 	$sp, 	0
			sw	$ra, 	2($fp)
			lw	$t0, 	4($fp)
			beq	$t0, 	$zero, base
			addi	$a0, 	$t0, 	-1
			addi	$sp, 	$sp, 	-1
			jalr	$at, 	$ra
			lw	$t2, 	0($sp)
			addi	$sp, 	$sp, 	2
			lw	$t0, 	4($fp)
			addi	$t1, 	$zero, 0
			addi	$v0, 	$zero, 0
mult:		beq	$t1, 	$t2, 	exit
			add	$v0, 	$v0, 	$t0
			addi	$t1, 	$t1, 	1
			beq	$zero,	$zero, mult
base:		addi	$v0, 	$zero, 1
			sw	$v0, 	0($fp)
return:		lw	$v0, 	0($fp)
			sw	$v0, 	3($fp)
			lw	$ra, 	2($fp)
			addi	$sp, 	$fp, 	3
			lw	$fp, 	1($fp)
			jalr	$ra, 	$zero
exit:		sw	$v0, 	0($fp)	
			beq	$zero, $zero, return
stack:		.word	0x4000
